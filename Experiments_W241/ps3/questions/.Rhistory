d <- fread("../data/broockman_green_anon_pooled_fb_users_only.csv")
library(data.table)
library(sandwich)
library(lmtest)
library(ggplot2)
library(knitr)
d <- fread("../data/broockman_green_anon_pooled_fb_users_only.csv")
d <- fread("../data/broockman_green_anon_pooled_fb_users_only.csv")
d
study1 = d[d$studyno==1]
mod_study1 <- lm(name_recall~treat_ad,data=study1) # should be a lm class object
confint(mod_study1)
coefci(x=mod_study1,level=0.95,vcov=sandwich::vcovCL(mod_study1,cluster= study_1$cluster))
coefci(x=mod_study1,level=0.95,vcov=sandwich::vcovCL(mod_study1,cluster= mod_study1$cluster))
coefci(x=mod_study1,level=0.95,vcov=sandwich::vcovCL(mod_study1,cluster= study1$cluster))
study2 = d[d$studyno==2]
mod_study2 <- lm(name_recall~treat_ad,data=study2) # should be a lm class object
coefci(x=mod_study2,level=0.95,vcov=sandwich::vcovCL(mod_study2,cluster= study2$cluster))
mod_pooled <- lm(name_recall~treat_ad,data=d) # should be a lm class object
coefci(x=mod_pooled,level=0.95,vcov::vcovCL(mod_pooled,cluster=d[,cluster]))
mod_pooled <- lm(name_recall~treat_ad,data=d) # should be a lm class object
coefci(x=mod_pooled,level=0.95,vcov=sandwich::vcovCL(mod_pooled,cluster=d[,cluster]))
mod_fe <- lm(name_recall~treat_ad+as.factor(studyno),data=d)
summary(mod_fe)
summary(mod_fe)$coefficients[2,4]
mod_fe <- lm(name_recall~treat_ad+as.factor(studyno),data=d)
summary(mod_fe)
#summary(mod_fe)$coefficients[2,4]
mod_fe <- lm(name_recall~treat_ad+as.factor(studyno),data=d)
summary(mod_fe)
summary(mod_fe)$coefficients[2,4]
mod_interaction <- lm(name_recall~treat_ad:as.factor(studyno)+as.factor(studyno),data=d)
mod_interaction <- lm(name_recall~treat_ad:as.factor(studyno)+as.factor(studyno),data=d)
mod_interaction
mod_interaction <- lm(name_recall~treat_ad:as.factor(studyno)+as.factor(studyno),data=d)
summary(mod_interaction)
library(data.table)
library(sandwich)
library(lmtest)
library(ggplot2)
library(knitr)
library(data.table)
library(sandwich)
library(lmtest)
library(ggplot2)
library(patchwork)
library(foreign)
d <- foreign::read.dta("../data/karlan_data_subset_for_class.dta")
d <- data.table(d)
head(d)
## Do some quick exploratory data analysis with this data.
## There are some values in this data that seem a bit strange.
## Determine what these are.
## Don't make an assessment about keeping, changing, or
## dropping just yet, but at any point that your analysis touches
## these variables, you'll have to determine what is appropriate
## given the analysis you are conducting.
mod_1 <- lm(bin~avg_bins_treat,data=d)
mod_1 <- lm(bin~avg_bins_treat,data=d)
confint(mod_1)
mod_2 <- lm(bin~avg_bins_treat+base_avg_bins_treat,data=d)
mod_2 <- lm(bin~avg_bins_treat+base_avg_bins_treat,data=d)
confint(mod_1)
mod_2 <- lm(bin~avg_bins_treat+base_avg_bins_treat,data=d)
confint(mod_2)
mod_3 <-  lm(bin~avg_bins_treat+base_avg_bins_treat+as.factor(street),data=d)
mod_3 <-  lm(bin~avg_bins_treat+base_avg_bins_treat+as.factor(street),data=d)
confint(mod_3)
mod_1 <- lm(bin~avg_bins_treat,data=d)
coefci(x=mod_1,level=0.95,vcov=vcovHC(mod_1,type='HC1'))
mod_1 <- lm(avg_bins_treat~bin,data=d)
coefci(x=mod_1,level=0.95,vcov=vcovHC(mod_1,type='HC1'))
mod_2 <- lm(avg_bins_treat~bin+base_avg_bins_treat,data=d)
confint(mod_2)
mod_2 <- lm(avg_bins_treat~bin+base_avg_bins_treat,data=d)
coefci(x=mod_2,level=0.95,vcov=vcovHC(mod_2,type='HC1'))
mod_3 <-  lm(avg_bins_treat~bin+base_avg_bins_treat+as.factor(street),data=d)
confint(mod_3)
mod_3 <-  lm(avg_bins_treat~bin+base_avg_bins_treat+as.factor(street),data=d)
coefci(x=mod_3,level=0.95,vcov=vcovHC(mod_3,type='HC1'))
mod_3 <-  lm(avg_bins_treat~bin+base_avg_bins_treat+factor(street),data=d)
coefci(x=mod_3,level=0.95,vcov=vcovHC(mod_3,type='HC1'))
mod_4 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street),data=d)
coefci(x=mod_4,level=0.95,vcov=vcovHC(mod_4,type='HC1'))
test_fixed_effects <- var.test(mod_4)
test_fixed_effects <- annova(mod_4)
test_fixed_effects <- anova(mod_4)
test_fixed_effects <- anova(mod_4)
test_fixed_effects
d
d[,no_cell_phone:=havecell-1]
nophone = d[,no_cell_phone:=havecell-1]
nophone
nophone = d[,no_cell_phone:=1-havecell]
nophone
d[,no_cell_phone:=1-havecell]
d[,no_cell_phone:=(1-havecell)]
d[,no_cell_phone:=(1-havecell)]
d
mod_5 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street)+no_cell_phone,data=d)
coefci(x=mod_5,level=0.95,vcov=vcovHC(mod_5,type='HC1'))
mod_6 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street)+no_cell_phone+sms,data=d)
coefci(x=mod_6,level=0.95,vcov=vcovHC(mod_6,type='HC1'))
d <- foreign::read.dta("../data/karlan_data_subset_for_class.dta")
d <- data.table(d)
head(d)
d[,street_fixed:=ifelse(street<0,0,1)]
## Do some quick exploratory data analysis with this data.
## There are some values in this data that seem a bit strange.
## Determine what these are.
## Don't make an assessment about keeping, changing, or
## dropping just yet, but at any point that your analysis touches
## these variables, you'll have to determine what is appropriate
## given the analysis you are conducting.
d <- foreign::read.dta("../data/karlan_data_subset_for_class.dta")
d <- data.table(d)
d[,street_fixed:=ifelse(street<0,0,1)]
head(d)
## Do some quick exploratory data analysis with this data.
## There are some values in this data that seem a bit strange.
## Determine what these are.
## Don't make an assessment about keeping, changing, or
## dropping just yet, but at any point that your analysis touches
## these variables, you'll have to determine what is appropriate
## given the analysis you are conducting.
mod_3 <-  lm(avg_bins_treat~bin+base_avg_bins_treat+factor(street_fixed),data=d)
coefci(x=mod_3,level=0.95,vcov=vcovHC(mod_3,type='HC1'))
mod_4 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street_fixed),data=d)
coefci(x=mod_4,level=0.95,vcov=vcovHC(mod_4,type='HC1'))
test_fixed_effects <- anova(mod_4)
test_fixed_effects
d[,no_cell_phone:=(1-havecell)]
d
mod_5 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street)+no_cell_phone,data=d)
coefci(x=mod_5,level=0.95,vcov=vcovHC(mod_5,type='HC1'))
mod_5 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street_fixed)+no_cell_phone,data=d)
coefci(x=mod_5,level=0.95,vcov=vcovHC(mod_5,type='HC1'))
mod_6 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street_fixed)+no_cell_phone+sms,data=d)
coefci(x=mod_6,level=0.95,vcov=vcovHC(mod_6,type='HC1'))
mod_6 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street_fixed)+no_cell_phone+sms,data=d)
coefci(x=mod_6,level=0.95,vcov=vcovHC(mod_6,type='HC1'))
summary(mod_6)
mod_6 <- lm(avg_bins_treat~bin+base_avg_bins_treat + as.factor(street_fixed)+no_cell_phone+sms,data=d)
coefci(x=mod_6,level=0.95,vcov=vcovHC(mod_6,type='HC1'))
mod_7 <- lm(avg_bins_treat~base_avg_bins_treat + as.factor(street_fixed)+no_cell_phone+bin_s+bin_g+sms_p+sms_g,data=d)
coefci(x=mod_7,level=0.95,vcov=vcovHC(mod_7,type='HC1'))
d <- fread("../data/Ebola_rct2.csv")
head(d)
mod_1 <- lm(dehydrated_day14~treat_zmapp,data=d)
summary(mod_1)
mod_2 <- 'fill this in'
mod_2 <- lm(dehydrated_day14~treat_zmapp+dehydrated_day0+temperature_day0,data=d)
summary(mod_2)
test_object <- var.test(mod_1,mod_2)
test_object <- var.test(mod_1,mod_2)
test_object
mod_3 <- lm(dehydrated_day14~treat_zmapp+dehydrated_day0+temperature_day0+temperature_day14,data=d)
summary(mod_3)
mod_3 <- lm(temperature_day14~treat_zmapp+dehydrated_day0+temperature_day0+dehydrated_day14,data=d)
summary(mod_3)
mod_4 <- lm(temperature_day14~treat_zmapp+dehydrated_day0+temperature_day0+dehydrated_day14+male,data=d)
summary(mod_4)
d
d[,male=1]
d[,male==1]
d[d[,male==1]]
d[, Mean:=mean(tamperature_day14), by=list(male,treat_zmapp)]
d[, Mean:=mean(temperature_day14), by=list(male,treat_zmapp)]
d[, Mean:=mean(temperature_day14), by=list(male,treat_zmapp)]
d
d[, Mean_T:=mean(temperature_day14),Mean_D:=mean(dehydrated_day14), by=list(male,treat_zmapp)]
d[, Mean_T:=mean(temperature_day14) Mean_D:=mean(dehydrated_day14), by=list(male,treat_zmapp)]
d[,( Mean_T:=mean(temperature_day14), Mean_D:=mean(dehydrated_day14)), by=list(male,treat_zmapp)]
d[, Mean_T:=mean(temperature_day14), by=list(male,treat_zmapp)]
d
d[,Mean_D:=mean(dehydrated_day14), by=list(male,treat_zmapp)]
d[, Mean_T:=mean(temperature_day14), by=list(male,treat_zmapp)]
d
d[,Mean_D:=mean(dehydrated_day14), by=list(male,treat_zmapp)]
d
d[, .(Mean_T:=mean(temperature_day14)), by=list(male,treat_zmapp)]
#d[, Mean_T:=mean(temperature_day14), by=list(male,treat_zmapp)]
#d
d[,.(Mean_D=mean(dehydrated_day14)), by=list(male,treat_zmapp)]
#d
d[, .(Mean_T:=mean(temperature_day14)), by=list(male,treat_zmapp)]
d[, .(Mean_Tem:=mean(temperature_day14)), by=list(male,treat_zmapp)]
d[, .(Mean_Tem=mean(temperature_day14)), by=list(male,treat_zmapp)]
#d
d[,.(Mean_Deh=mean(dehydrated_day14)), by=list(male,treat_zmapp)]
#d
